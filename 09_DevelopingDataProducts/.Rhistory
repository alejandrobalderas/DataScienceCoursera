lm(child~1, galton)
head(trees)
fit <- lm(Volume~Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth",trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit,fit2),coef)
rm(list = ls())
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x~y)
library(ggplot2)
qplot(x,y)
data("mtcars")
with(mtcars,lm(mpg~weights))
head(mtcars)
with(mtcars,lm(mpg~wt))
qplot(x,y, geom = "smooth")
qplot(x,y, geom = "smooth", method = "lm")
qplot(x,y, geom = c("point","smooth"), method = "lm")
qplot(x,y, geom = c("point","smooth"), method = "lm", formula = x~y)
qplot(x,y, geom = c("point","smooth"), method = "lm")
qplot(x,y, geom = c("point","smooth"))
qplot(x,y, geom = c("point","smooth"), method = "lm")
0.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x_2 <- (x-mean(x))/sd(x)
x_2
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x ~ y)
coef(lm(x ~ y))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
qplot(x,y)
qplot(x,y, geom = c("point","smooth"), method = "lm")
g <- ggplot(data.frame(x,y), aes(x = x, y = y))
g + geom_point()
g + geom_point() + geom_smooth("lm")
g + geom_point() + geom_smooth(method = "lm")
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
lm(y~x)
?lm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
with(mtcars,lm(mpg~wt))
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
mu <- mean(x)
w
sum(w*(x-mu)^2)
sum(w*(x-0.3)^2)
sum(w*(x-0.147)^2)
sum(w*(x-1.147)^2)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w*x)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))
coef(lm(x~y))
coef(lm(y~x-0))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
regr_line <- lm(y ~ x + 0)
coef(regr_line)
data(mtcars)
with(mtcars,lm(mpg ~ wt))
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
library(swirl)
swirl()
swirl()
all <- lm(Fertility~.,data = swiss)
summary(all)
summary(lm(Fertility~agriculture,data = swiss))
summary(lm(Fertility~Agriculture,data = swiss))
with(swiss,cor(Examination,Education))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, data = swiss)
coef(all)- coef(efit)
all$coefficients-efit$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
summary(lm(y~x))
fit <- lm(y~x)
fit$p.values
fit
s <- summary(fit)
summary(fit)$p.values
summary(fit)$p.value
s
data(mtcars)
fit <- lm(mpg~wt,data = mtcars)
summary(fit)
predict(fit,newdata = mean(mtcars$wt))
mean(mtcars$wt)
?predict
predict(fit,mean(mtcars$wt))
fit
predict(fit,data.frame = mean(mtcars$wt))
data.frame(mean(mtcars$wt))
data.frame(wt = mean(mtcars$wt))
predict(fit,data.frame(mean(mtcars$wt)))
predict(fit,newdata = data.frame(wt = mean(mtcars$wt)))
predict(fit,newdata = data.frame(wt = mean(mtcars$wt)),interval = "confidence")
fit
summary(fit)
head(mtcars)
predict(fit,newdata = data.frame(wt = 3000,interval = "confidence")
)
predict(fit,newdata = data.frame(wt = mean(mtcars$wt)),interval = "confidence")
predict(fit,newdata = data.frame(wt = 3000),interval = "confidence")
predict(fit,newdata = data.frame(wt = 3),interval = "confidence")
predict(fit,newdata = data.frame(wt = 3),interval = "prediction")
data("mtcars")
fit <- with(mtcars,lm(mpg~wt))
summary(fit)
xnew <- 2
predict(fit, newdata = data.frame(wt = xnew))
predict(fit, newdata = data.frame(wt = xnew),"confidence")
predict(fit, newdata = data.frame(wt = xnew),interval = "confidence")
fit <- with(mtcars,lm(mpg~2*wt))
fit <- with(mtcars,lm(mpg~(2*wt))
)
mtcars$wt2 <- mtcars$wt * 2
fit <- with(mtcars,lm(mpg~wt2))
predict(fit,newdata = data.frame(wt2 = 1), interval = "confidence")
predict(fit,newdata = data.frame(wt2 = 1), interval = "predict")
fit <- with(mtcars,lm(mpg~wt))
predict(fit,newdata = data.frame(wt = 2), interval = "predict")
fit <- with(mtcars,lm(mpg~I(wt/2)))
predict(fit,newdata = data.frame(wt = 2), interval = "predict")
predict(fit,newdata = data.frame(wt = 1), interval = "predict")
summary(fit)
sumCoeff <- coef(fit)
sumCoeff
sumCoeff <- summary(fit)$coefficients
sumCoeff
es <- sumCoeff[1,2]
es
es <- sumCoeff[2,1]
se <- sumcoeff[2,2]
se <- sumCoeff[2,2]
se
es + c(-1,1)*qt(0.975, df = summary(fit)$df)*se
names(summary(fit))
summary(fit)$df
fit$df
es + c(-1,1)*qt(0.975, df = fit$df)*se
data(mtcars)
fit1 <- lm(mpg~wt , data = mtcars)
fit1 <- lm(mpg~wt-1, data = mtcars)
fit0 <- lm(mpg~wt-1, data = mtcars)
fit1 <- lm(mpg~wt , data = mtcars)
summary(fit0)
summary(fit1)
fit0 <- lm(mpg~wt-0, data = mtcars)
summary(fit0)
fit0 <- lm(mpg~1, data = mtcars)
fit0
mean(mtcars$mpg)
fit0$residuals
sum(fit0$residuals)
predict(fit0)
sse <- (mtcars$mpg - predict(fit0))
sse <- (mtcars$mpg - predict(fit0))^2
sse <- sum((mtcars$mpg - predict(fit0))^2)
sse0 <- sum((mtcars$mpg - predict(fit0))^2)
sse1 <- sum((mtcars$mpg - predict(fit1))^2)
sse0/sse1
sse1/sse0
anova(fit0)
rm(list = ls())
library(swirl)
swirl()
72
View(InsectSprays)
dim(InsectSprays)
head(InsectSprays,15)
SA
sA
summary(InsectSprays[,2])
sapply(class,1,InsectSprays)
sapply(class,InsectSprays)
mean(InsectSprays$count)
sapply(InsectSprays,class)
fit <- lm(count ~ spray, data = InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count~spray - 1, data = InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray2, data = InsectSprays)
summary(fit2)$coef
mean(sC)
fit$coef
(fit$coef[2]-fit$coef[3])/1.6011
swirl()
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year)
fit <- lm(Numeric ~ Year,hunger)
summary(fit)
summary(fit)$coef
fit <- lm(Numeric ~ Year,hunger)
lmF <- lm(Numeric[Sex == "Female"] ~ Year[Sex == "Female"], hunger)
lmM <- lm(Numeric[Sex == "Male"] ~ Year[Sex == "Male"], hunger)
library(swirl)
swirl()
lmF
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, data = hunger)
summary(lmInter)
swirl()
fit <- lm(y~x, data = out2)
plot(fit, which = 1)
fitno <- lm(y~x,out2[-1,])
plot(fitno,which = 1)
coef(fit)- coef(fitno)
head(dfbeta(fit))
resno <- out[1,"y"] - predict(fitno,out[1,])
resno <- out2[1,"y"] - predict(fitno,out2[1,])
1-redid(fit)[1]/resno
1-redis(fit)[1]/resno
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- out2[1]
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit,which = 3)
plot(fit, which = 2)
sigma1 <- sqrt(deviance(fitno)/(df.residual(fitno)))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fit,out2)- predict(fitno,out2)
dy/(2*sigma^2)
sum(dy^2/(2*sigma^2))
plot(fit,which = 5)
library(swirl)
swirl()
swirl()
swirl()
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, "binomial", data = ravenData)
predict(mdl, data.frame(ravenScore = c(0,3,6)))
lodds <- predict(mdl, data.frame(ravenScore = c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
mdl0 <- glm(ravenWinNum ~ 1, binomial, ravenData)
summary(mdl0)
ravenData
mean(ravenData$ravenWinNum)
predict(mdl0)
mdl0$coefficients
exp(mdl0$coefficients)
7/3
swirl()
var(rpois(1000,50))
head(hits)
class(hits[,"date"])
as.integer(head(hits[,"date"]))
mdl <- glm(visits~date,poisson,hits)
summary(mdl)
exp(confint(mdl,"date"))
library(swirl)
swirl()
swirl()
ones <- rep(1,nrow(galton))
lm(child ~ ones + parent -1)
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volum ~ Girth + Height + Constant - 1, trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit,fit2),coef)
library(swirl)
swirl()
all <- lm(Fertility ~ ., data = swiss)
all
summary(all)
lm(Fertility~agriculture)
lm(Fertility~agriculture, data = swiss)
lm(Fertility ~ Agriculture, data = swiss)
summary(lm(Fertility ~ Agriculture, data = swiss))
cor(Examination, Education, data = swiss)
View(swiss)
with(swiss,cor(Examination,Education))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility~.+ec)
efit <- lm(Fertility~.+ec, data = swiss)
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays,15)
sB
summary(InsectSprays[,2])
sapply(InsectSprays,class)
fit <- lm(count ~ spray, data = InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sprayB)
mean(sB)
nfit <- lm(count~spray-1, data = swiss)
nfit <- lm(count ~spray-1, data = swiss)
nfit <- lm(count ~spray-1, data = InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(InsectSprays$count ~ spray2)
summary(fit2)
summary(fit2)$coef
mean(sC)
(fit$coef[3]-fit$coef[2])/1.6011
(fit$coef[3]-fit$coef[2])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
data(mtcars )
mpg <- mtcars$mpg
names(mtcars)
cyl <- mtcars$cyl
fit <- lm(mpg ~ cyl)
fit
summary(fit)
fit$coef[2]
fit$coef[2]*4
class(cyl)
cyl <- as.factor(cyl)
cyl
names(mtcars)
wt <- mtcars$wt
class(wt)
fit <- lm(mpg ~ cyl + wt)
fit
library(swirl)
swirl()
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(hunger$Numeric[hunger$Sex == "Female"]~ hunger$Year[hunger$Sex == "Female"] )
lmM <- lm(hunger$Numeric[hunger$Sex == "Male"]~ hunger$Year[hunger$Sex == "Male"] )
lmBoth <- lm(Numeric ~ Year  + Sex , hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, data = hunger)
summary(lmInter)
fit <- lm(y~x,out2)
plot(fit,which=1)
fitno <- lm(y~x, out2[-1,])
plot(fitno, which = 1)
data("swiss")
fit <- lm(Fertility ~ Agriculture, data = swiss)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
fit <- lm(Fertility ~ Agriculture + factor(CatholicBin), data = swiss)
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
library(dplyr);
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
fit <- lm(Fertility ~ Agriculture + factor(CatholicBin), data = swiss)
fit
summary(fit)
fit1 <- lm(Fertility~Agriculture*factor(CatholicBin), data = swiss)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
p <- 1
n <- 100; x2 <- runif(n); x1 <- p * runif(n) - (1 - p) * x2
beta0 <- 0; beta1 <- 1; tau <- 4 ; sigma <- .01
y <- beta0 + x1 * beta1 + tau * x2 + rnorm(n, sd = sigma)
plot(x1, y, type = "n", frame = FALSE)
abline(lm(y ~ x1), lwd = 2)
co.pal <- heat.colors(n)
points(x1, y, pch = 21, col = "black", bg = co.pal[round((n - 1) * x2 + 1)], cex = 2)
par(mfrow=c(2,2))
fit <- lm(Fertility~., data = swiss)
plot(fit)
library(swirl)
swirl()
swirl()
swirl()
library(swirl)
swirl()
fit <- lm(y~x, out2)
plot(fit, which = 1)
play()
View(out2)
range(X)
range(out2$x)
range(out2$x[-1,])
range(out2$x[-1])
with(plot(x,y))
with(out2,plot(x,y))
plot(out2$x,out2$y)
fit <- lm(y~x, out2)
abline(fit)
fitno <- lm(y~x,out2[-1,])
abline(fitno, col = "red")
fit$coefficients
fitno$coefficients
predict(fit)
resid(fit)
resid(fit)[1]
sum(resid(fit))
plot(fitno, which=1)
which.max(resid(fit))
which.max(resid(fitno))
resid(fitno)
max(redid(fitno))
max(resid(fitno))
resid(fitno[22])
resid(fitno)[22]
resid(fit)[22]
resid(fit)[1]
resid(fit)[13]
nxt(+)
nxt()
fitno <- lm(y~x, out2[-1,])
plot(fitno, which = 1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1,"y"] - predict(fitno,out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- deviance(fit)/sqrt(resid(fit))
sigma <- sqrt(deviance(fit))/df.residual(fit)
sigma <- sqrt(deviance(fit)/df.residual(fit))
library(swirl)
swirl()
rgp1()
rgp2()
head(swiss)
mdl <- fit(Fertility~., swiss)
mdl <- lm(Fertility~., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, data = swiss
)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, data = swiss)
anova(fit1,fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d,2,43,lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit1,fit3,fit5,fit6)
install.packages("shiny")
setwd("~/Coursera/DataScience/DataScienceCoursera/09_DevelopingDataProducts")
shiny::runApp('~/myApp')
runApp('~/myApp')
runApp('~/myApp')
runApp('~/myApp')
runApp('~/myApp')
runApp('~/myApp')
runApp('~/myApp')
runApp('~/myApp')
require(ggplot2)
data("mtcars")
g <- ggplot(data = mtcars, aes(x = am, y = mpg, fill = am))
g + geom_boxplot()
g <- ggplot(data = mtcars, aes(x = factor(am), y = mpg, fill = factor(am)))
g + geom_boxplot()
runApp('~/myApp')
runApp('~/myApp')
runApp('~/myApp')
runApp('~/myApp')
