qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom
library(ggplot2)
?geom
??geom
qplot(votes, rating, data = movies)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality) + geom_smooth()
qplot(Wind, Ozone, data = airquality, smooth = 'loess'
)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1,col="blue")
abline(h=1.5,col="blue")
play()
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
nxt()
abline(h = 0.4,col = "red")
5
5
12
abline(h = 0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix,cm.colors(25))
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
swirl()
swirl()
swirl()
library(swirl)
swirl()
swirl()
swirl()
swirl()
swirl()
dist(dataFrame)
hc <- hclust(distxy)
print(hc)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5,col = "blue")
abline(h = 0.4,col = "red")
5
12
abline(h = 0.5, col="green")
dist(dFSM)
dist(dFsm)
hc
heatmap(dataMatrix,col = cm.colors(25))
heatmap(mt)
mt
denmt
plot(denmt)
distmt
library(swirl)
swirl()
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5,col= "blue")
abline(h = 0.2,col = "red")
abline(h = 0.4,col = "red")
5
12
abline(h=0.05,col="green")
dFsm
dist(dFsm)
hc
heatmap(dataMatrix,col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col = c("red","orange","purple",pch = 3, cex = 2, lwd = 2))
points(cx,cy,col = c("red","orange","purple"),pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch = 19, cex=2, col = cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
msdist(x,y,newCx,newCy)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch = 10, cex = 2, col = cols1[newClust2])
points(x,y,pch = 19, cex = 2, col = cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col = cols1,pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y,col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black","red","green"),pch = 3, cex = 3, lwd = 3)
plot(x,y,col = kmeans(dataFrame,6)$cluster,pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster,pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster,pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local = TRUE)
heatmap(dataMatrix)
library(swirl)
swirl()
mat
svd(mat)
matu%*%t(matv)
matu %*% diag %*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$d
svd2$v[,1:2]
svd$d
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd1$d[1])%*%svd1$d
a1 <- (svd1$u[,1]*svd1$d[1])%*%t(svd1$d)
a1 <- (svd1$u[,1]*svd1$d[1])%*%t(svd1$d[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$d[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
image(a1)
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% svd1$v[,1:2]
a1 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
a1 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
library(swirl)
swirl()
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd,562,563)
?names
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(1:12,maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclust <- hclustering(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering , lab.col = unclass(sub1$activity))
names(sub1[maxCon])
library(swirl)
swirl()
swirl()
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster,sub1$activity)
table(kClust$cluster,sub1$activity,nstart = 100)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6,nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust$cluster)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12],pch = 19,ylab = "Laying Cluster")
names(sub1)
names(sub1[,1:3])
walkdown <- which(kClust$size = 49)
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12],pch = 19, ylab = "walkdown Cluster")
plot(kClust$centers[walkdown,1:12],pch = 19, ylab = "Walkdown Cluster")
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,symbol = "|",fixed = TRUE)
cnames <- strsplit(cnames,symbol = '|',fixed = TRUE)
?strsplit
cnames <- strsplit(cnames, '|' , fixed = TRUE)
cnames
play()
wcol
cnames[[1]][wcol]
nxt()
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
pm0$x0 <- Sample.Value
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(xß)
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1)
)
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(pm1$Date)
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0,State.Code ==36 & county.sie %in% both)
cnt0 <- subset(pm0,State.Code ==36 & county.site %in% both)
cnt1 <- subset(pm1,State.Code ==36 & county.site %in% both)
library(swirl)
swirl()
library(httr)
oauth_endpoints("github")
library(httr)
key <- "7761ca6c1a3b6881407f"
secret <- "16acd176ba8cc0bae165802476e7f12b10ba5549"
myapp <- oauth_app("github",
key = key,
secret = secret)
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
myapp = oauth_app("github",key = key, secret = secret)
rm(list = ls())
library(httr)
key <- "7761ca6c1a3b6881407f"
secret <- "16acd176ba8cc0bae165802476e7f12b10ba5549"
library(httr)
key <- "7761ca6c1a3b6881407f"
secret <- "16acd176ba8cc0bae165802476e7f12b10ba5549"
myapp <- oauth_app("github",
key = key,
secret = secret)
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
library(httr)
key <- "7761ca6c1a3b6881407f"
secret <- "16acd176ba8cc0bae165802476e7f12b10ba5549"
myapp <- oauth_app("github",
key = key,
secret = secret)
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
installed.packages("httpuv")
install.packages("httpuv")
library(httr)
key <- "7761ca6c1a3b6881407f"
secret <- "16acd176ba8cc0bae165802476e7f12b10ba5549"
myapp <- oauth_app("github",
key = key,
secret = secret)
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
?grep
grep("datasharing",req,value = TRUE)
grep("datasharing",req[1],value = TRUE)
grep("datasharing",req[2],value = TRUE)
grep("datasharing",req[3],value = TRUE)
grep("datasharing",req[4],value = TRUE)
dim(req)
length(req)
for(i in 1:length(req)){
grep("datasharing",req[i],value = TRUE)
}
names(req)
req["url"]
req["date"]
req["time"]
library(swirl)
swirl(9)
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,"|",fixed = TRUE)
cnames
?strsplit
names(pm0) <- cnames[[1]][wcol]
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnmaes[[1]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<x0
negative <- x1<0
sum(negative,na.rm = TRUE)
mean(negative,na.rum = TRUE)
mean(negative,na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character((dates)),"%Y%m%d")
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negatie],"month")
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cntß <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
?split
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub <- subset(cnt0, County.Code == 63, Site.ID == 2008 )
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008 )
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008 )
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0,x0sub,pch = 20)
abline(h=median(x0sub,na.rm = TRUE),lwd = 2)
plot(dates1,x1sub,pch=20)
plot(dates1,x1sub,pch=20)
plot(dates0,x0sub,pch = 20)
plot(dates0,x0sub,pch = 20)
abline(h=median(x0sub,na.rm = TRUE),lwd = 2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm = TRUE),lwd = 2)
rng <- range(x0sub,x1sub,na.rm = TRUE)
rng
library(swirl)
swirl()
swirl()
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,aesthetic ? drv)
qplot(displ,hwy,data=mpg,aesthetic = drv)
qplot(displ,hwy,data=mpg,aesthetic = mpg$hwy)
qplot(displ,hwy,data=mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point","smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets facets = .~drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~., binwidth= 2)
swirl()
qplot(displ, hwy data=mpg, geom = c("point","smooth", facets = .~drv))
qplot(displ, hwy, data=mpg, geom = c("point","smooth", facets = .~drv))
qplot(displ, hwy, data=mpg, geom = c("point","smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ,hwy))
g
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2) + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2
)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g + geom_point(aes(color = drv)) + ggtitle("Swirl Rules!") + labs(x = "Displacement" , y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement" , y = "Hwy Mileage")
g + geom_point(aes(color = drv, size = 2, alpha = 0.5)) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdata, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line
g + geom_line()
g + geom_line(ylim(-3,3))
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(dataset, aes(x = displ, y = hwy, color = factor(year)))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
library(swirl)
swirl()
dice_sqr
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair-sqrt(3.5)
ex2_fair-3.5^2
sum(dice_sqr * dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
play()
tmp <- matrix(rnorm(10000),1000)
View(tmp)
?matrix
dim(tmp)
sd(apply(matrix(rnorm(100000),1000),1,mean))
1/sqrt(100)
nxt()
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2sqrt(10))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,True),1000),1,mean))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
swirl()
.8^3
choose(5,3)*0.8^3*.2^(5-3)
choose(5,3)*(0.8)^3*(.2)^(5-3)
choose(5,3)*(0.8)^3*(.2)^(5-3)+choose(5,4)*(0.8)^4*(.2)^(5-4) + choose(5,5)*(0.8)^5*(.2)^(5-5)
library(swirl)
swirl()
?pbinom
pbinom(2,5,0.8, lower.tail = FALSE)
?qnorm
qnorm(0.9)
qnorm(0.1)
0
qnorm(0.025, mean = 3, sd = 4)
qnorm(0.975, mean = 3, sd = 4)
qnorm(0.975, mean = 3, sd = 2)
3*1.96 + 3
2*1.96 + 3
pnorm(30, mean = 1020, sd = 50)
pnorm(1200, mean = 1020, sd = 50,lower.tail = FALSE)
pnorm((1200-1020)/4,lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail = FALSE)
qnrom(0.75, mean = 1020, sd = 50, lower.tail = TRUE)
qnorm(0.75, mean = 1020, sd = 50, lower.tail = TRUE)
0.53
0.53
ppois(3,mean = 2.5*4)
ppois(3,lambda = 2.5*4)
pbinom(0.01,size = 1000, prob = 0.01)
pbinom(5,size = 1000, prob = 0.01)
ppois(5,1000*0.01)
swirl()
setwd("~/Coursera/DataScience/DataScienceCoursera/04_ExploratoryDataAnalysis/CourseProject2")
fileName <- "data/exdata_data_NEI_data.zip"
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
if(!file.exists(fileName)){
download.file(fileUrl,fileName)
}
# Read Data
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
library(dplyr)
SMVS <- NEI[(NEI$fips=="24510") & (NEI$type=="ON-ROAD"),]
SMVS_Y <- summarise(group_by(SMVS, year), Emissions=sum(Emissions))
##plotting data usin ggplot library(ggplot2)
ggplot(SMVS_Y, aes(x= factor(year),y=Emissions, fill = year))+
geom_bar(stat = "identity", position = "dodge")+
xlab("year")+
ggtitle("Baltimore Motor Vehicle Emissions")
library(reshape2)
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
vehicleIndex <- grep("vehicle",SCC$SCC.Level.Two,ignore.case = TRUE)
scc_index <- SCC$SCC[vehicleIndex]
motorVehicleNEI <- NEI[NEI$SCC %in% scc_index,]
baltimoreVehicleNEI <- motorVehicleNEI[motorVehicleNEI$fips =="24510",]
losAngelesVehicleNEI <- motorVehicleNEI[motorVehicleNEI$fips =="06037",]
baltimoreVehicleNEI <- aggregate(Emissions~year,baltimoreVehicleNEI,mean)
losAngelesVehicleNEI <- aggregate(Emissions~year,losAngelesVehicleNEI,mean)
mergedData <- merge(baltimoreVehicleNEI,losAngelesVehicleNEI, by ="year")
names(mergedData) <- c("year","Baltimore","LA")
dataMelt <- melt(mergedData, id = "year")
ggplot(dataMelt, aes(x= factor(year),y=Emissions, fill = year))+
geom_bar(stat = "identity", position = "dodge")+
xlab("year")+
ggtitle("Baltimore Motor Vehicle Emissions")
dataMelt
head(SMVS_Y)
SMVS_Y
