tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col = cols1,pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y,col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black","red","green"),pch = 3, cex = 3, lwd = 3)
plot(x,y,col = kmeans(dataFrame,6)$cluster,pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster,pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster,pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local = TRUE)
heatmap(dataMatrix)
library(swirl)
swirl()
mat
svd(mat)
matu%*%t(matv)
matu %*% diag %*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$d
svd2$v[,1:2]
svd$d
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd1$d[1])%*%svd1$d
a1 <- (svd1$u[,1]*svd1$d[1])%*%t(svd1$d)
a1 <- (svd1$u[,1]*svd1$d[1])%*%t(svd1$d[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$d[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
image(a1)
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% svd1$v[,1:2]
a1 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
a1 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
library(swirl)
swirl()
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd,562,563)
?names
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(1:12,maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclust <- hclustering(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering , lab.col = unclass(sub1$activity))
names(sub1[maxCon])
library(swirl)
swirl()
swirl()
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster,sub1$activity)
table(kClust$cluster,sub1$activity,nstart = 100)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6,nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust$cluster)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12],pch = 19,ylab = "Laying Cluster")
names(sub1)
names(sub1[,1:3])
walkdown <- which(kClust$size = 49)
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12],pch = 19, ylab = "walkdown Cluster")
plot(kClust$centers[walkdown,1:12],pch = 19, ylab = "Walkdown Cluster")
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,symbol = "|",fixed = TRUE)
cnames <- strsplit(cnames,symbol = '|',fixed = TRUE)
?strsplit
cnames <- strsplit(cnames, '|' , fixed = TRUE)
cnames
play()
wcol
cnames[[1]][wcol]
nxt()
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
pm0$x0 <- Sample.Value
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(xß)
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1)
)
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(pm1$Date)
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0,State.Code ==36 & county.sie %in% both)
cnt0 <- subset(pm0,State.Code ==36 & county.site %in% both)
cnt1 <- subset(pm1,State.Code ==36 & county.site %in% both)
library(swirl)
swirl()
library(httr)
oauth_endpoints("github")
library(httr)
key <- "7761ca6c1a3b6881407f"
secret <- "16acd176ba8cc0bae165802476e7f12b10ba5549"
myapp <- oauth_app("github",
key = key,
secret = secret)
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
myapp = oauth_app("github",key = key, secret = secret)
rm(list = ls())
library(httr)
key <- "7761ca6c1a3b6881407f"
secret <- "16acd176ba8cc0bae165802476e7f12b10ba5549"
library(httr)
key <- "7761ca6c1a3b6881407f"
secret <- "16acd176ba8cc0bae165802476e7f12b10ba5549"
myapp <- oauth_app("github",
key = key,
secret = secret)
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
library(httr)
key <- "7761ca6c1a3b6881407f"
secret <- "16acd176ba8cc0bae165802476e7f12b10ba5549"
myapp <- oauth_app("github",
key = key,
secret = secret)
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
installed.packages("httpuv")
install.packages("httpuv")
library(httr)
key <- "7761ca6c1a3b6881407f"
secret <- "16acd176ba8cc0bae165802476e7f12b10ba5549"
myapp <- oauth_app("github",
key = key,
secret = secret)
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
?grep
grep("datasharing",req,value = TRUE)
grep("datasharing",req[1],value = TRUE)
grep("datasharing",req[2],value = TRUE)
grep("datasharing",req[3],value = TRUE)
grep("datasharing",req[4],value = TRUE)
dim(req)
length(req)
for(i in 1:length(req)){
grep("datasharing",req[i],value = TRUE)
}
names(req)
req["url"]
req["date"]
req["time"]
library(swirl)
swirl(9)
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,"|",fixed = TRUE)
cnames
?strsplit
names(pm0) <- cnames[[1]][wcol]
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnmaes[[1]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<x0
negative <- x1<0
sum(negative,na.rm = TRUE)
mean(negative,na.rum = TRUE)
mean(negative,na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character((dates)),"%Y%m%d")
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negatie],"month")
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cntß <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
?split
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub <- subset(cnt0, County.Code == 63, Site.ID == 2008 )
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008 )
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008 )
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0,x0sub,pch = 20)
abline(h=median(x0sub,na.rm = TRUE),lwd = 2)
plot(dates1,x1sub,pch=20)
plot(dates1,x1sub,pch=20)
plot(dates0,x0sub,pch = 20)
plot(dates0,x0sub,pch = 20)
abline(h=median(x0sub,na.rm = TRUE),lwd = 2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm = TRUE),lwd = 2)
rng <- range(x0sub,x1sub,na.rm = TRUE)
rng
library(swirl)
swirl()
swirl()
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,aesthetic ? drv)
qplot(displ,hwy,data=mpg,aesthetic = drv)
qplot(displ,hwy,data=mpg,aesthetic = mpg$hwy)
qplot(displ,hwy,data=mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point","smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets facets = .~drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~., binwidth= 2)
swirl()
qplot(displ, hwy data=mpg, geom = c("point","smooth", facets = .~drv))
qplot(displ, hwy, data=mpg, geom = c("point","smooth", facets = .~drv))
qplot(displ, hwy, data=mpg, geom = c("point","smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ,hwy))
g
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2) + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2
)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g + geom_point(aes(color = drv)) + ggtitle("Swirl Rules!") + labs(x = "Displacement" , y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement" , y = "Hwy Mileage")
g + geom_point(aes(color = drv, size = 2, alpha = 0.5)) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdata, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line
g + geom_line()
g + geom_line(ylim(-3,3))
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(dataset, aes(x = displ, y = hwy, color = factor(year)))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
library(swirl)
swirl()
1.6*.8/2
0.64
mypdf
integrate(mypdf, 0, 1.6)
1/4
x = sqrt(2)
swirl()
0.997*0.001
(1-0.997)*(1-0.001)
(1-0.985)*(1-0.001)
(1-0.997)*(1-0.001)/((1-0.997)*(1-0.001)+ (1-0.985)*(1-0.001)
)
0.997*0.001/(0.997*0.001 + (1-0.985)*(1-0.001))
swirl()
3.5
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh + edl)
swirl()
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
swirl()
swirl()
rm(list=ls())
swirl()
swirl()
setwd("~/Coursera/DataScience/DataScienceCoursera/04_ExploratoryDataAnalysis/CourseProject2")
fileName <- "data/exdata_data_NEI_data.zip"
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
if(!file.exists(fileName)){
download.file(fileUrl,fileName)
}
# Read Data
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
# =========  Plot 1  =======
pm_1999 <- NEI$Emissions[which(NEI$year == 1999)]*1000
pm_2002 <- NEI$Emissions[which(NEI$year == 2002)]*1000
pm_2005 <- NEI$Emissions[which(NEI$year == 2005)]*1000
pm_2008 <- NEI$Emissions[which(NEI$year == 2008)]*1000
boxplot(log10(Emissions) ~ year,NEI,xlab = "year", ylab = "log10 PM2.5")
# ========= PLOT 2  =======
boxplot(log10(Emissions)~year,NEI[which(
NEI$fips == "24510" & (NEI$year=="1999"|NEI$year == "2008")),],
xlab = "year", ylab = "log10 PM2.5 [tons]")
title(main="Comparison of PM2.5 Levels for the years 1999-2008 in Bufallo")
# ======== PLOT 3 =======
library(ggplot2)
subNEI <- NEI[which(NEI$fips == "24510" & (NEI$year=="1999"|NEI$year == "2008")),]
subNEI_mean <- aggregate(Emissions~type + year, subNEI,mean)
g <- ggplot(subNEI_mean,aes(year,Emissions,group = type))
g + geom_point(color = "steelblue",size = 4, alpha = 0.3) + geom_path(aes(color = type))+
xlim(1996,2010) + ylab("Mean Emissions ")
subNEI <- NEI[which(NEI$fips == "24510"),]
NEI_mean <- aggregate(Emissions~type + year, subNEI,mean)
Emissions_1999 <- subset(NEI_mean,year == "1999")
g <- ggplot(NEI_mean,aes(year,Emissions,group = type))
g + geom_point(color = "steelblue",size = 4, alpha = 0.3) + geom_path(aes(color = type),lwd=1)+
xlim(1996,2010)
# ======= PLOT 4 =======
library(ggplot2)
fill <- "#4271AE"
line <- "#1F3552"
indexPlot <- grep("[C-c]oal",SCC$EI.Sector)
scc_index <- SCC$SCC[indexPlot]
subNEI <- NEI[which(NEI$SCC %in% scc_index),]
subNEI_median <- aggregate(Emissions~year, subNEI,median)
subNEI_mean <- aggregate(Emissions~year, subNEI,mean)
g <- ggplot(subNEI,aes(x=year,y=log10(Emissions),group = year))
g + geom_boxplot(fill = fill, color = line)
g + geom_boxplot(fill = factor(subNEI$year),color = line)
g <- ggplot(subNEI_median,aes(x = year, y = Emissions, group = year))
g + geom_point(color = "steelblue",size = 4, alpha = 1)
g + geom_point(color = "steelblue",size = 4, alpha = 0.3) + geom_path(aes(color = type))+
xlim(1996,2010)
# ========= PLOT 5 =======
vehicleIndex <- grep("vehicle",SCC$SCC.Level.Two,ignore.case = TRUE)
scc_index <- SCC$SCC[vehicleIndex]
subNEI_vehicle <- NEI[NEI$fips=="24510" &
NEI$SCC %in% scc_index,]
subNEI_vehicle <- aggregate(Emissions~year,subNEI_vehicle,mean)
g <- ggplot(subNEI_vehicle, aes(factor(year),Emissions))
g + geom_bar(stat = "identity") + labs(x="Year", y = "Mean Emissions [tons]",
title= "Mean Emissions vor Road Vehicles in Baltimore over the years")
# ======== PLOT 6 =======
vehicleIndex <- grep("vehicle",SCC$SCC.Level.Two,ignore.case = TRUE)
scc_index <- SCC$SCC[vehicleIndex]
motorVehicleNEI <- NEI[NEI$SCC %in% scc_index,]
baltimoreVehicleNEI <- motorVehicleNEI[motorVehicleNEI$fips =="24510",]
losAngelesVehicleNEI <- motorVehicleNEI[motorVehicleNEI$fips =="06037",]
baltimoreVehicleNEI <- aggregate(Emissions~year,baltimoreVehicleNEI,mean)
losAngelesVehicleNEI <- aggregate(Emissions~year,losAngelesVehicleNEI,mean)
mergedData <- merge(baltimoreVehicleNEI,losAngelesVehicleNEI, by ="year")
g <- ggplot(mergedData,aes(x=year,fill=))
boxplot(log10(Emissions)~year,NEI[which(
NEI$fips == "24510" & (NEI$year=="1999"|NEI$year == "2008")),],
xlab = "year", ylab = "log10 PM2.5 [tons]")
title(main="Comparison of PM2.5 Levels for the years 1999-2008 in Bufallo")
boxplot(log10(Emissions)~year,NEI[which(
NEI$fips == "24510" & (NEI$year=="1999"|NEI$year == "2008")),],
xlab = "year", ylab = "log10 PM2.5 [tons]")
title(main="Comparison of PM2.5 Levels for the years 1999-2008 in Bufallo")
g <- ggplot(mergedData,aes(x=year))
mergedData
g + geom_line(aes(y = Emissions.x))
g + geom_point(aes(y = Emission.x),color = "steelblue",size = 4, alpha = 0.3) + geom_path(aes(y = Emissions.x,color = type))+
xlim(1996,2010)
g <- ggplot(mergedData,aes(x=year))
g + geom_point(aes(y = Emissions.x),color = "steelblue",size = 4, alpha = 0.3) + geom_path(aes(y = Emissions.x,color = type))+
xlim(1996,2010)
g + geom_point(aes(y = Emissions.x),color = "steelblue",size = 4, alpha = 0.3)
g + geom_point(aes(y = Emissions.x),color = "steelblue",size = 4, alpha = 0.3) + geom_path(aes(y = Emissions.x))
g + geom_point(aes(y = Emissions.x),color = "steelblue",size = 4, alpha = 0.3) +
geom_path(aes(y = Emissions.x,color= "steelblue" )) +
ggeom_point(aes(y = Emissions.y),color = "red",size = 4, alpha = 0.3) +
geom_path(aes(y = Emissions.y,color= "red"))
g + geom_point(aes(y = Emissions.x),color = "steelblue",size = 4, alpha = 0.3) +
geom_path(aes(y = Emissions.x,color= "steelblue" )) +
geom_point(aes(y = Emissions.y),color = "red",size = 4, alpha = 0.3) +
geom_path(aes(y = Emissions.y,color= "red"))
library(reshape2)
?melt
tmp <- melt(mergedData)
tmp
tmp <- melt(mergedData, id = "year")
tmp
g <- ggplot(mergedData, aes(x=year))
g <- ggplot(tmp, aes(x=year))
g + geom_bar(stat = "identity")
g <- ggplot(tmp, aes(x=year, group = year))
g + geom_bar(stat = "identity")
g <- ggplot(tmp, aes(factor(year),)
g + geom_bar(stat = "identity")
g <- ggplot(tmp, aes(factor(year))
g + geom_bar(stat = "identity")
g <- ggplot(tmp, aes(factor(year)))
g + geom_bar(stat = "identity")
g <- ggplot(tmp, aes(x = year, y = value, color = variable))
g + geom_line()
mergedData
names(mergedData)
names(mergedData) <- c("year","Baltimore","LA")
tmp <- melt(mergedData, id = "year")
g <- ggplot(tmp, aes(x = year, y = value, color = variable))
g + geom_line()
g + geom_line(size = 2)
g + geom_line(size = 1)
g <- ggplot(tmp,aes(value,fill = variable))
g + geom_bar()
g <- ggplot(tmp,aes(x = year,fill = variable))
g + geom_bar()
g + geom_bar(stat = "identity")
g + geom_bar(stat = "count")
g + geom_bar()
g <- ggplot(tmp,aes(x = year,y = variable,fill = variable))
g + geom_col()
g <- ggplot(tmp,aes(x = year,y = value,fill = variable))
g + geom_col()
g + geom_col() + facet_grid(.~variable)
g + geom_col() + facet_grid(.~variable) + labs(x = "Year")
dataMelt <- melt(mergedData, id = "year")
g <- ggplot(dataMelt,aes(x = year,y = value))
g + geom_col() + facet_grid(.~variable) + labs(x = "Year",y = "Mean")
dataMelt
g <- ggplot(dataMelt,aes(x = year,y = value))
g + geom_col() + facet_grid(.~variable)
tmp
g <- ggplot(dataMelt,aes(x = year,y = value, fill = variable))
g + geom_col() + facet_grid(.~variable)
g + geom_col() + facet_grid(.~variable)  +
labs(x = "Year",y = "Mean Value PM2.5 [tons]", title = "Motor Vehicle Comparison between Baltimore and LA")
g + geom_col() + facet_grid(.~variable)  +
labs(x = "Year",y = "Mean Value PM2.5 [tons]", title = "Motor Vehicle Comparison between Baltimore and LA")+
xlim(1996,2010)
?xlim
dataMelt$year
unique(dataMelt$year)
g + geom_col() + facet_grid(.~variable)  +
labs(x = "Year",y = "Mean Value PM2.5 [tons]", title = "Motor Vehicle Comparison between Baltimore and LA")+
xlim(1996,2010) + scale_x_discrete(unique(dataMelt$year))
g + geom_col() + facet_grid(.~variable)  +
labs(x = "Year",y = "Mean Value PM2.5 [tons]", title = "Motor Vehicle Comparison between Baltimore and LA")+
xlim(1996,2010) + scale_x_discrete(limits = unique(dataMelt$year))
g + geom_col() + facet_grid(.~variable)  +
labs(x = "Year",y = "Mean Value PM2.5 [tons]", title = "Motor Vehicle Comparison between Baltimore and LA")+
scale_x_discrete(limits = unique(dataMelt$year))
