sd_placebo <- 1.8
sd_pill <- 1.5
n <- 9
df <- (sd_placebo^2/n + sd_pill^2/n)^2/
((sd_placebo^2/n)^2/(n-1)+(sd_pill^2/n)^2/(n-1))
alpha = 0.1
t_dist <- qt(1-alpha/2,df = df)
# answer from the quiz
t_dist <- qt(1-alpha/2,df = 16)
ans7 <- mean_pill - mean_placebo + c(-1,1)*t_dist*(sd_placebo^2/n + sd_pill^2/n)^0.5
print(round(ans7, digits = 3))
2*pt((mean_pill-mean_placebo)/(sd_pooled/sqrt(n)),df = 16)
library(swirl)
swirl()
install_from_swirl("Regression Models")
library(swirl)
swirl()
plot(child~parent,galton)
plot(jitter(child,4)~parent,galton)
regrline <- lm(child~parent,galton)
abline(regrline,lwd=3, col = "red")
summary(regrline)
fit <- lm(child~parent,galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals,galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs-lhs
lhs-rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(ols.slope,ols.ic)
varEst <- var(est(ols.slope,ols.ic))
all.equal(varChild,(varRes + varEst))
all.equal(varChild,varRes + varEst)
efit <- lm(accel ~ mag+dist,attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
manipulate(myPlot(beta), beta = slider(0.4, .8, step = 0.02))
cor(gpa_nor,gch_nor)
l_nor <- lm(child~parent, galton)
l_nor <- lm(gch_nor ~ gpa_nor)
swirl()
library(swirl)
swirl()
fit <- lm(child~parent,galton)
sqrt(sum(fit$residuals)/(n-2))
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child-mu)^2)
sRes <- deviance(galton$child)
sRes <- deviance(galton$child)
sRes <- deviance(fit)
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child,galton$parent)^2
ones <- rep(1,nrow(galton))
lm(child~ones + parent -1 ,galton)
lm(child~parent,galton)
library(swirl)
swirl()
lm(child~1, galton)
head(trees)
fit <- lm(Volume~Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth",trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit,fit2),coef)
rm(list = ls())
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x~y)
library(ggplot2)
qplot(x,y)
data("mtcars")
with(mtcars,lm(mpg~weights))
head(mtcars)
with(mtcars,lm(mpg~wt))
qplot(x,y, geom = "smooth")
qplot(x,y, geom = "smooth", method = "lm")
qplot(x,y, geom = c("point","smooth"), method = "lm")
qplot(x,y, geom = c("point","smooth"), method = "lm", formula = x~y)
qplot(x,y, geom = c("point","smooth"), method = "lm")
qplot(x,y, geom = c("point","smooth"))
qplot(x,y, geom = c("point","smooth"), method = "lm")
0.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x_2 <- (x-mean(x))/sd(x)
x_2
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x ~ y)
coef(lm(x ~ y))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
qplot(x,y)
qplot(x,y, geom = c("point","smooth"), method = "lm")
g <- ggplot(data.frame(x,y), aes(x = x, y = y))
g + geom_point()
g + geom_point() + geom_smooth("lm")
g + geom_point() + geom_smooth(method = "lm")
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
lm(y~x)
?lm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
with(mtcars,lm(mpg~wt))
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
mu <- mean(x)
w
sum(w*(x-mu)^2)
sum(w*(x-0.3)^2)
sum(w*(x-0.147)^2)
sum(w*(x-1.147)^2)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w*x)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))
coef(lm(x~y))
coef(lm(y~x-0))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
regr_line <- lm(y ~ x + 0)
coef(regr_line)
data(mtcars)
with(mtcars,lm(mpg ~ wt))
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
library(swirl)
swirl()
swirl()
all <- lm(Fertility~.,data = swiss)
summary(all)
summary(lm(Fertility~agriculture,data = swiss))
summary(lm(Fertility~Agriculture,data = swiss))
with(swiss,cor(Examination,Education))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, data = swiss)
coef(all)- coef(efit)
all$coefficients-efit$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
summary(lm(y~x))
fit <- lm(y~x)
fit$p.values
fit
s <- summary(fit)
summary(fit)$p.values
summary(fit)$p.value
s
data(mtcars)
fit <- lm(mpg~wt,data = mtcars)
summary(fit)
predict(fit,newdata = mean(mtcars$wt))
mean(mtcars$wt)
?predict
predict(fit,mean(mtcars$wt))
fit
predict(fit,data.frame = mean(mtcars$wt))
data.frame(mean(mtcars$wt))
data.frame(wt = mean(mtcars$wt))
predict(fit,data.frame(mean(mtcars$wt)))
predict(fit,newdata = data.frame(wt = mean(mtcars$wt)))
predict(fit,newdata = data.frame(wt = mean(mtcars$wt)),interval = "confidence")
fit
summary(fit)
head(mtcars)
predict(fit,newdata = data.frame(wt = 3000,interval = "confidence")
)
predict(fit,newdata = data.frame(wt = mean(mtcars$wt)),interval = "confidence")
predict(fit,newdata = data.frame(wt = 3000),interval = "confidence")
predict(fit,newdata = data.frame(wt = 3),interval = "confidence")
predict(fit,newdata = data.frame(wt = 3),interval = "prediction")
data("mtcars")
fit <- with(mtcars,lm(mpg~wt))
summary(fit)
xnew <- 2
predict(fit, newdata = data.frame(wt = xnew))
predict(fit, newdata = data.frame(wt = xnew),"confidence")
predict(fit, newdata = data.frame(wt = xnew),interval = "confidence")
fit <- with(mtcars,lm(mpg~2*wt))
fit <- with(mtcars,lm(mpg~(2*wt))
)
mtcars$wt2 <- mtcars$wt * 2
fit <- with(mtcars,lm(mpg~wt2))
predict(fit,newdata = data.frame(wt2 = 1), interval = "confidence")
predict(fit,newdata = data.frame(wt2 = 1), interval = "predict")
fit <- with(mtcars,lm(mpg~wt))
predict(fit,newdata = data.frame(wt = 2), interval = "predict")
fit <- with(mtcars,lm(mpg~I(wt/2)))
predict(fit,newdata = data.frame(wt = 2), interval = "predict")
predict(fit,newdata = data.frame(wt = 1), interval = "predict")
summary(fit)
sumCoeff <- coef(fit)
sumCoeff
sumCoeff <- summary(fit)$coefficients
sumCoeff
es <- sumCoeff[1,2]
es
es <- sumCoeff[2,1]
se <- sumcoeff[2,2]
se <- sumCoeff[2,2]
se
es + c(-1,1)*qt(0.975, df = summary(fit)$df)*se
names(summary(fit))
summary(fit)$df
fit$df
es + c(-1,1)*qt(0.975, df = fit$df)*se
data(mtcars)
fit1 <- lm(mpg~wt , data = mtcars)
fit1 <- lm(mpg~wt-1, data = mtcars)
fit0 <- lm(mpg~wt-1, data = mtcars)
fit1 <- lm(mpg~wt , data = mtcars)
summary(fit0)
summary(fit1)
fit0 <- lm(mpg~wt-0, data = mtcars)
summary(fit0)
fit0 <- lm(mpg~1, data = mtcars)
fit0
mean(mtcars$mpg)
fit0$residuals
sum(fit0$residuals)
predict(fit0)
sse <- (mtcars$mpg - predict(fit0))
sse <- (mtcars$mpg - predict(fit0))^2
sse <- sum((mtcars$mpg - predict(fit0))^2)
sse0 <- sum((mtcars$mpg - predict(fit0))^2)
sse1 <- sum((mtcars$mpg - predict(fit1))^2)
sse0/sse1
sse1/sse0
anova(fit0)
rm(list = ls())
library(swirl)
swirl()
72
View(InsectSprays)
dim(InsectSprays)
head(InsectSprays,15)
SA
sA
summary(InsectSprays[,2])
sapply(class,1,InsectSprays)
sapply(class,InsectSprays)
mean(InsectSprays$count)
sapply(InsectSprays,class)
fit <- lm(count ~ spray, data = InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count~spray - 1, data = InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray2, data = InsectSprays)
summary(fit2)$coef
mean(sC)
fit$coef
(fit$coef[2]-fit$coef[3])/1.6011
swirl()
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year)
fit <- lm(Numeric ~ Year,hunger)
summary(fit)
summary(fit)$coef
fit <- lm(Numeric ~ Year,hunger)
lmF <- lm(Numeric[Sex == "Female"] ~ Year[Sex == "Female"], hunger)
lmM <- lm(Numeric[Sex == "Male"] ~ Year[Sex == "Male"], hunger)
library(swirl)
swirl()
lmF
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, data = hunger)
summary(lmInter)
swirl()
fit <- lm(y~x, data = out2)
plot(fit, which = 1)
fitno <- lm(y~x,out2[-1,])
plot(fitno,which = 1)
coef(fit)- coef(fitno)
head(dfbeta(fit))
resno <- out[1,"y"] - predict(fitno,out[1,])
resno <- out2[1,"y"] - predict(fitno,out2[1,])
1-redid(fit)[1]/resno
1-redis(fit)[1]/resno
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- out2[1]
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit,which = 3)
plot(fit, which = 2)
sigma1 <- sqrt(deviance(fitno)/(df.residual(fitno)))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fit,out2)- predict(fitno,out2)
dy/(2*sigma^2)
sum(dy^2/(2*sigma^2))
plot(fit,which = 5)
library(swirl)
swirl()
swirl()
swirl()
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, "binomial", data = ravenData)
predict(mdl, data.frame(ravenScore = c(0,3,6)))
lodds <- predict(mdl, data.frame(ravenScore = c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
mdl0 <- glm(ravenWinNum ~ 1, binomial, ravenData)
summary(mdl0)
ravenData
mean(ravenData$ravenWinNum)
predict(mdl0)
mdl0$coefficients
exp(mdl0$coefficients)
7/3
swirl()
var(rpois(1000,50))
head(hits)
class(hits[,"date"])
as.integer(head(hits[,"date"]))
mdl <- glm(visits~date,poisson,hits)
summary(mdl)
exp(confint(mdl,"date"))
library(swirl)
swirl()
swirl()
ones <- rep(1,nrow(galton))
lm(child ~ ones + parent -1)
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volum ~ Girth + Height + Constant - 1, trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit,fit2),coef)
library(swirl)
swirl()
all <- lm(Fertility ~ ., data = swiss)
all
summary(all)
lm(Fertility~agriculture)
lm(Fertility~agriculture, data = swiss)
lm(Fertility ~ Agriculture, data = swiss)
summary(lm(Fertility ~ Agriculture, data = swiss))
cor(Examination, Education, data = swiss)
View(swiss)
with(swiss,cor(Examination,Education))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility~.+ec)
efit <- lm(Fertility~.+ec, data = swiss)
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays,15)
sB
summary(InsectSprays[,2])
sapply(InsectSprays,class)
fit <- lm(count ~ spray, data = InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sprayB)
mean(sB)
nfit <- lm(count~spray-1, data = swiss)
nfit <- lm(count ~spray-1, data = swiss)
nfit <- lm(count ~spray-1, data = InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(InsectSprays$count ~ spray2)
summary(fit2)
summary(fit2)$coef
mean(sC)
(fit$coef[3]-fit$coef[2])/1.6011
(fit$coef[3]-fit$coef[2])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
library(swirl)
swirl()
6
dim(InsectSprays)
head(InsectSprays,15)
sC
summary(InsectSprays[,2])
sapply(InsectSprays,class)
fit <- lm(count ~ spray, data = InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count~spray-1, data = InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSpray,"C")
spray2 <- relevel(InsectSprays,"C")
spray2 <- relevel(InsectSprays,C)
spray2 <- relevel(InsectSprays$spray,C)
spray2 <- relevel(InsectSprays$spray,"C")
fit2 <- lm(count~spray, data = InsectSprays)
fit2 <- lm(count~spray2, data = InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2] - fit$coef[3])/1.6011
fit$coef
swirl()
dim(hunger)
948
names(hunger)
play()
sapply(hunger,class)
nxt()
fit <- lm(Numeric ~ Year, data = hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Years , data = hunger[hunger$Sex == "Female"])
lmF <- lm(Numeric ~ Years , data = hunger[hunger$Sex == "Female",])
lmF <- lm(Numeric ~ Year , data = hunger[hunger$Sex == "Female",])
summary(lmF)
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
summary(lmF)
lmM <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
setwd("~/Coursera/DataScience/DataScienceCoursera/06_StatisticalInference")
lambda <- 0.2
n <- 40
sims.mean <- NULL
sims.sd <- NULL
for(i in 1:1000){
sims <- rexp(n,lambda)
sims.mean <- c(sims.mean, mean(sims))
sims.sd <- c(sims.sd, sd(sims))
}
# normalization
sims.mean <- (sims.mean - mean(sims.mean))/sd(sims.mean)
x <- seq(-4,4, length = 100)
hx <- dnorm(x)
g <- ggplot(data.frame(x = sims.mean), aes(x = x))
g + geom_histogram(aes(y = ..density.. ,fill = I("steelblue")), binwidth = density(sims.mean)$bw) +
geom_line(data = data.frame(x=x,hx=hx),aes(x=x,y=hx), col = "red", size = 1) +
labs(x = "Normalized Mean Simulations", y = "Probability", title ="Central Limit Theorem")
qplot(sims.mean)
hist(sims.mean, prob = TRUE, ylim = c(0,0.45))
lines(x,hx, type = "l", col = "red")
library(ggplot2)
library(dplyr)
library(reshape2)
x <- seq(0,20,length = 1000)
lambda.01 <- dexp(x,rate = 0.1)
lambda.02 <- dexp(x, rate = 0.2)
lambda.03 <- dexp(x, rate=0.5)
dat <- data.frame(x,lambda.01,lambda.02,lambda.03)
dat <- melt(dat, id.vars = "x")
g <- ggplot(dat, aes(x = x, y = value,color = variable))
g <- g + geom_line(size = 2)
g
#g + scale_color_manual(labels = c("Lambda: 0.1","Lambda: 0.2","Lambda: 0.5"),values = c("blue","red","green"))
g <- ggplot(data.frame(x = c(0,30)), aes(x=x))
g <- g + stat_function(fun = dexp, geom = "line",size = 1, col = "blue", args = (mean = 0.1))
g <- g + stat_function(fun = dexp, geom = "line",size = 1, col = "red", args = (mean = 0.2))
g <- g + stat_function(fun = dexp, geom = "line",size = 1, col = "green", args = (mean = 0.3))
g <- g + guide_legend()
g
g <- g + guides(col = c("blue", "red","green"))
g
# Inferential Data Analysis
data("ToothGrowth")
g <- ggplot(data = ToothGrowth, aes(x = supp, y = len, fill = supp))
g + geom_boxplot()
qplot(supp, len, data = ToothGrowth, geom = "boxplot", fill = dose)
oj <- ToothGrowth[ToothGrowth$supp == "OJ",]
vc <- ToothGrowth[ToothGrowth$supp == "VC",]
temp <- t.test(len~supp, paired = FALSE, var.equal = FALSE, data = ToothGrowth)
sub1 <- ToothGrowth[ToothGrowth$dose == 0.5 | ToothGrowth$dose == 1,]
sub2 <- ToothGrowth[ToothGrowth$dose == 1 | ToothGrowth$dose == 2,]
res1 <- t.test(len~dose, data = sub1, paired = FALSE, var.equal = FALSE)
res2 <- t.test(len~dose, data = sub2, paired = FALSE, var.equal = FALSE)
mean(sims.sd^2)
