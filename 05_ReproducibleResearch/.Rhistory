poisson.test(5,94.32)$conf
library(swirl)
swirl()
myplot(2)
View(myplot)
myplot(20)
myplot(2)
myplot2(2)
qt(0.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g1-g2
difference <- g2-g1
mean(difference)
s <- sd(difference)
mn + c(-1,1)*qt(0.975,9)*s/sqrt(10)
t.test(difference)$conf.int
sp <- (7)*15.34^2+20*18.23^2
ns <- (21+8-2)
sp/ns
sp <- sqrt(sp/ns)
132.86-127.44 + c(-1,1)*qt(.95,ns)*sp/sqrt(ns)
132.86-127.44 + c(-1,1)*qt(.975,ns)*sp/sqrt(1/8+1/21)
132.86-127.44 + c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
var(g1,g2,)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
mn + c(-1,1)*qt(.975,ns)*sp*sqrt(1/10+1/10)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/10+1/10)
t.test(g2-g1,paired = FALSE, var.equal = TRUE)$conf
t.test(g2,g1,paired = FALSE, var.equal = TRUE)$conf
t.test(g2,g1,paired = TRUE, var.equal = TRUE)$conf
t.test(g2,g1,paired = TRUE)$conf
?df
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86 - 127.44 + c(-1,2)*qt(.975, mydf)*sqrt(15.34^2/7+18.23^2/20)
132.86 - 127.44 + c(-1,2)*qt(.975, mydf)*sqrt(15.34^2/8+18.23^2/21)
132.86 - 127.44 + c(-1,1)*qt(.975, mydf)*sqrt(15.34^2/8+18.23^2/21)
mu <- 1100
sd <- 75
mu + c(-1,1)*qnorm(0.975)*sqrt(sd/100)
mu + c(-1,1)*qnorm(0.975)*sd/sqrt(100)
pnorm(0.95)
qnorm(0.95)
qnorm(0.95,mean = 1100, sd = 75/10)
mu + c(-1,1)*qnorm(0.95)*sd/sqrt(100)
pbinom(50,size = 101, prob = 0.5)
pbinom(50,size = 100, prob = 0.5)
pbinom(51,size = 100, prob = 0.5)
pbinom(49,size = 100, prob = 0.5)
pnorm(14,mean = 15,sd = 14/10,lower.tail = TRUE)
pnorm(14,mean = 15,sd = 14/10,lower.tail = F)
pnorm(16,mean = 15,sd = 14/10,lower.tail = T) pnorm(14,mean = 15,sd = 14/10,lower.tail = T)
pnorm(16,mean = 15,sd = 14/10,lower.tail = T)- pnorm(14,mean = 15,sd = 14/10,lower.tail = T)
pnorm(16,mean = 15,sd = 14/10,lower.tail = F)- pnorm(14,mean = 15,sd = 14/10,lower.tail = F)
pnorm(16,mean = 15,sd = 14/10,lower.tail = T)- pnorm(14,mean = 15,sd = 14/10,lower.tail = T)
pnorm(16,mean = 15,sd = 14/10,lower.tail = F)- pnorm(14,mean = 15,sd = 14/10,lower.tail = T)
pnorm(16,mean = 15,sd = 14/10,lower.tail = F)
pnorm(16,mean = 15,sd = 14/10,lower.tail = F)*2
mean(runif(1000))
mean(runif(10000))
lambda <- 5/3
ppois(10,lambda = lambda)
lambda <- 5*
3
ppois(10,lambda = lambda)
pnorm(16,mean = 15,sd = 10/10,lower.tail = F)*2
pnorm(14,mean = 15,sd = 10/10,lower.tail = F)*2
pnorm(14,mean = 15,sd = 10/10,lower.tail = F)
pnorm(14,mean = 15,sd = 10/10,lower.tail = T)
pnorm(16,mean = 15,sd = 10/10,lower.tail = T)-pnorm(14,mean = 15,sd = 10/10,lower.tail = T)
library(swirl)
swirl()
play()
View(myplot)
nxt()
myplot(2)
myplot(20)
myplot2(2)
qt(0.975,2)
myplot2(20)
sleep
swirl()
10/10
2
2/10/sqrt(16)
2/(10/4)
15
qt(0.95,15)
dim(fs)
t.test(fs$fheight,fs$sheight,paired = T)
t.test(fs$fheight,fs$sheight,paired = TRUE)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
pt(q = 2.5,df = 15, lower.tail = FALSE)
qnorm(0.95)
qnomr(0.99)
qnorm(0.99)
pnorm(q = 2, lower.tail = TRUE)
pnorm(q = 2, lower.tail = FALSE)
mybin
pbinom(6,size=8, prob = .5, lower.tail = FALSE)
pbinom(7,size = 8 , prob = 0.5, lower.tail = TRUE)
ppois(9, lambda = 5, lower.tail = FALSE)
myplot((34))
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
library(swirl)
swirl()
z <- qnorm(0.95)
pnorm(30+z, mean = 30, lower.tail = FALSE)
pnorm(30+z, mean = 32, lower.tail = FALSE)
pnomr(30+z,mean = 32,sd=1,lower.tail = FALSE)
pnorm(30+z,mean = 32,sd=1,lower.tail = FALSE)
pnorm(30+z,mean = 32,sd=2,lower.tail = FALSE)
pnorm(30+z*2,mean = 32,sd=2,lower.tail = FALSE)
power.t.test(n = 16, delta = 2/4, sd = 1, type = "one.sample", alt= "one.sided")$power
power.t.test(n = 16, delta = 2, sd = 4, type = "one.sample", alt= "one.sided")$power
power.t.test(n = 16, delta = 100, sd = 200, type = "one.sample", alt= "one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2 , sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100 , sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = 0.8, n = 26, sd = 1)
power.t.test(power = 0.8, n = 26, sd = 1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = 0.8, n = 27, sd = 1, type = "one.sample", alt = "one.sided")$delta
library(swirl)
swirl()
head(pValues)
sum(pValues < 0.05)
?p.adjust
sum(p.adjust(pValues, method = bonferroni"")<0.05)
sum(p.adjust(pValues, method = "bonferroni")<0.05)
sum(p.adjust(pValues, method = "BH")<0.05)
tail(trueStatus)
table(pvalues2 < 0.05, trueStatus)
table(pValues2 < 0.05, trueStatus)
24/500
table(p.adjust(pValues2,method = "bonferroni") < 0.05, trueStatus)
table(p.adjust(pValues2,method = "BH") < 0.05, trueStatus)
?binom.test
binom.test(3,4,p=0.5)
binom.test(3,4,p=0.5)$p.value
binom.test(3,4,p=0.5,alternative = "greater")$p.value
binom.test(3,4,p=0.5,alternative = "less")$p.value
binom.test(3,4,p=0.5,alternative = "greater")$p.value
?poisson.test
poisson.test(10,1787,r = 1/100, alternative = "less")
poisson.test(10,1787,r = 1/100, alternative = "less")$p.value
mean_placebo <- 1
mean_pill <- -3
sd_placebo <- 1.8
sd_pill <- 1.5
n <- 9
df <- (sd_placebo^2/n + sd_pill^2/n)^2/
((sd_placebo^2/n)^2/(n-1)+(sd_pill^2/n)^2/(n-1))
alpha = 0.1
t_dist <- qt(1-alpha/2,df = df)
ans7 <- mean_pill - mean_placebo + c(-1,1)*t_dist*(sd_placebo^2/n + sd_pill^2/n)^0.5
print(round(ans7, digits = 3))
sd_pooled <- ((n-1)*sd_placebo + (n-1)*sd_pill)/(n+n-2)
?pt
stat <- mean_placebo - mean_pill
stat <- mean_pill - mean_placebo
?t.test
?pt
m <- mean_pill - mean_placebo
m/sd_pooled/sqrt(n)
qt(abs(m/sd_pooled/sqrt(n)))
qt(abs(m/sd_pooled/sqrt(n)),df = 16)
mean_placebo <- 1
mean_pill <- -3
sd_placebo <- 1.8
sd_pill <- 1.5
n <- 9
df <- (sd_placebo^2/n + sd_pill^2/n)^2/
((sd_placebo^2/n)^2/(n-1)+(sd_pill^2/n)^2/(n-1))
alpha = 0.1
t_dist <- qt(1-alpha/2,df = df)
ans7 <- mean_pill - mean_placebo + c(-1,1)*t_dist*(sd_placebo^2/n + sd_pill^2/n)^0.5
print(round(ans7, digits = 3))
t_dist <- qt(1-alpha/2,df = 16)
ans7 <- mean_pill - mean_placebo + c(-1,1)*t_dist*(sd_placebo^2/n + sd_pill^2/n)^0.5
print(round(ans7, digits = 3))
t_dist
pt(-4,df = 16)
qt(abs((mean_pill-mean_placebo)/sd_pooled/sqrt(n)),df = 16)
pt(abs((mean_pill-mean_placebo)/sd_pooled/sqrt(n)),df = 16)
pt(abs((mean_pill-mean_placebo)/(sd_pooled/sqrt(n))),df = 16)
pt(((mean_pill-mean_placebo)/(sd_pooled/sqrt(n))),df = 16)
pt((mean_pill-mean_placebo)/(sd_pooled/sqrt(n)),df = 16)
(mean_pill-mean_placebo)/(sd_pooled/sqrt(n)
)
mean_placebo <- 1
mean_pill <- -3
sd_placebo <- 1.8
sd_pill <- 1.5
n <- 9
df <- (sd_placebo^2/n + sd_pill^2/n)^2/
((sd_placebo^2/n)^2/(n-1)+(sd_pill^2/n)^2/(n-1))
alpha = 0.1
t_dist <- qt(1-alpha/2,df = df)
# answer from the quiz
t_dist <- qt(1-alpha/2,df = 16)
ans7 <- mean_pill - mean_placebo + c(-1,1)*t_dist*(sd_placebo^2/n + sd_pill^2/n)^0.5
print(round(ans7, digits = 3))
2*pt((mean_pill-mean_placebo)/(sd_pooled/sqrt(n)),df = 16)
db_url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
db_zip <- "StormData.csv.bz2"
if (!file.exists(db_zip)) {
download.file(db_url, db_zip, method="curl")
}
df <- read.csv("StormData.csv.bz2")
?kable
??kable
setwd("~/Coursera/DataScience/DataScienceCoursera/05_ReproducibleResearch")
str(df)
levels(df$EVTYPE)
tmp <- df[,cols]
cols <- c("EVTYPE", "FATALITIES", "INJURIES", "CROPDMG", "CROPDMGEXP", "PROPDMG", "PROPDMGEXP")
tmp <- df[,cols]
tmp2 <- subset(df, select = cols)
data <- subset(df, select = cols)
data$EVTYPE <- trim.space(data$EVTYPE)
data$EVTYPE <- toupper(data$EVTYPE)
data <- df[,cols]
head(data)
dat <- df[,cols]
head(data)
head(dat)
levels(dat$PROPDMGEXP)
# Expenses
levels(dat$PROPDMGEXP)
# Digits
dat$CROPDMGEXP <- gsub("[[:digit:]]", "10", dat$CROPDMGEXP)
dat$PROPDMGEXP <- gsub("[[:digit:]]", "10", dat$PROPDMGEXP)
## +
dat$CROPDMGEXP <- gsub("\\+", "1", dat$CROPDMGEXP)
dat$PROPDMGEXP <- gsub("\\+", "1", dat$PROPDMGEXP)
## -,?
dat$CROPDMGEXP <- gsub("[-\\?]", "0", dat$CROPDMGEXP)
dat$PROPDMGEXP <- gsub("[-\\?]", "0", dat$PROPDMGEXP)
# Change the levels for the H, K, M, B
dat$PROPDMGEXP <- gsub("[Hh]","100",dat$PROPDMGEXP)
dat$PROPDMGEXP <- gsub("[Kk]","1000",dat$PROPDMGEXP)
dat$PROPDMGEXP <- gsub("[Mm]","1000000",dat$PROPDMGEXP)
dat$PROPDMGEXP <- gsub("[Bb]","1000000000",dat$PROPDMGEXP)
dat$CROPDMGEXP <- gsub("[Hh]","100",dat$CROPDMGEXP)
dat$CROPDMGEXP <- gsub("[Kk]","1000",dat$CROPDMGEXP)
dat$CROPDMGEXP <- gsub("[Mm]","1000000",dat$CROPDMGEXP)
dat$CROPDMGEXP <- gsub("[Bb]","1000000000",dat$CROPDMGEXP)
# Empty values
dat$PROPDMGEXP[dat$PROPDMGEXP == ""] <- 0
dat$CROPDMGEXP[dat$CROPDMGEXP == ""] <- 0
# Parse values as numeric
dat$PROPDMGEXP <- as.numeric(dat$PROPDMGEXP)
dat$CROPDMGEXP <- as.numeric(dat$CROPDMGEXP)
library(dplyr)
?mutate
str(dat)
dat <- mutate(dat,PROPEXPTOTAL, PROPDMGEXP*PROPDMG)
dat <- mutate(dat,CROPEXPTOTAL, CROPDMGEXP*CROPDMG)
dat <- mutate(dat,PROPEXPTOTAL = PROPDMGEXP*PROPDMG)
dat <- mutate(dat,CROPEXPTOTAL = CROPDMGEXP*CROPDMG)
head(dat)
?kable
head(dat)
class(dat$EVTYPE)
class(dat$PROPEXPTOTAL)
levels(dat$EVTYPE)
names(df)
names(data)
names(dat)
dt_summary <- aggregate(FATALITIES + INJURIES ~EVTYPE, dat, sum
)
dt_summary <- aggregate(FATALITIES + INJURIES ~ EVTYPE, dat, sum)
head(dt_summary)
dt_summary <- aggregate(cbind(FATALITIES + INJURIES) ~ EVTYPE, dat, sum)
head(dt_summary)
View(dt_summary)
fatalities_per_event <- aggregate(FATALITIES ~ EVTYPE, dat, sum)
injuries_per_event <- aggregate(INJURIES ~ EVTYPE, dat,sum)
?order
order(fatalities_per_event)
head(fatalities_per_event[order(fatalities_per_event)])
head(fatalities_per_event[order(fatalities_per_event),])
(fatalities_per_event[order(fatalities_per_event),])
head(fatalities_per_event[order(fatalities_per_event$FATALITIES),])
head(fatalities_per_event[order(fatalities_per_event$FATALITIES, desc),])
head(fatalities_per_event[order(fatalities_per_event$FATALITIES, decreasing = FALSE),])
head(fatalities_per_event[order(fatalities_per_event$FATALITIES, decreasing = TRUE),])
head(fatalities_per_event)
head(injuries_per_event)
fatalities_per_event[order(fatalities_per_event$FATALITIES, decreasing = TRUE),]
injuries_per_event[order(fatalities_per_event$FATALITIES, decreasing = TRUE),]
fatalities_per_event <- fatalities_per_event[order(fatalities_per_event$FATALITIES, decreasing = TRUE),]
injuries_per_event <- injuries_per_event[order(fatalities_per_event$FATALITIES, decreasing = TRUE),]
View(fatalities_per_event)
library(knitr)
library(ggplot2)
library(dplyr)
fatalities_per_event <- aggregate(FATALITIES ~ EVTYPE, dat, sum)
injuries_per_event <- aggregate(INJURIES ~ EVTYPE, dat,sum)
head(fatalities_per_event)
head(injuries_per_event)
fatalities_and_injuries_per_event <- merge(fatalities_per_event,injuries_per_event, by="EVTYPE")
head(fatalities_and_injuries_per_event)
fatalities_and_injuries_per_event <-
fatalities_and_injuries_per_event[order(fatalities_and_injuries_per_event$FATALITIES, decreasing = T)]
fatalities_and_injuries_per_event <-
fatalities_and_injuries_per_event[order(fatalities_and_injuries_per_event$FATALITIES, decreasing = T),]
g <- ggplot(fatalities_and_injuries_per_event[1:10,], aes(x = EVTYPE,y = FATALITIES))
g + geom_bar()
g + geom_bar(stat = "identity")
fatalities_and_injuries_per_event <-
fatalities_and_injuries_per_event[order(fatalities_and_injuries_per_event$FATALITIES, decreasing = T),]
head(fatalities_and_injuries_per_event)
fatalities_and_injuries_per_event[1:10,]
g <- ggplot(fatalities_and_injuries_per_event[1:10,], aes(x = EVTYPE,y = FATALITIES))
g + geom_bar(stat = "identity")
?reorder
g <- ggplot(fatalities_and_injuries_per_event[1:10,], aes(x = reorder(EVTYPE),y = FATALITIES))
g + geom_bar(stat = "identity")
g <- ggplot(fatalities_and_injuries_per_event[1:10,], aes(x = reorder(EVTYPE, - (FATALITIES)),y = FATALITIES))
g + geom_bar(stat = "identity")
library(reshape2)
?melt
tmp <- melt(fatalities_and_injuries_per_event, id.vars = "EVTYPE")
head(tmp)
g<- ggplot(tmp[1:10], aes(x = value, fill = "variable"))
g + geom_bar(stat="identity")
g<- ggplot(tmp[1:10,], aes(x = value, fill = "variable"))
g + geom_bar(stat="identity")
g<- ggplot(tmp[1:10,], aes(x = EVTYPE, y = value, fill = variable))
g + geom_bar(stat="identity")
str(tmp)
fatalities_and_injuries_per_event <- aggregate(cbind(FATALITIES,INJURIES)~EVTYPE,dat,sum,na.rm=TRUE)
head(fatalities_and_injuries_per_event)
fatalities_and_injuries_per_event <- merge(fatalities_per_event,injuries_per_event, by="EVTYPE")
head(fatalities_and_injuries_per_event)
fatalities_and_injuries_per_event <-
fatalities_and_injuries_per_event[order(fatalities_and_injuries_per_event$INJURIES, decreasing = T),]
head(fatalities_and_injuries_per_event)
tmpdata <- melt(fatalities_and_injuries_per_event,id.vars = "EVTYPE")
head(tmpdata)
?arrange
library(dplyr)
?arrange
tmpdata <- arrange(fatalities_and_injuries_per_event, desc(FATALITIES + INJURIES))
head(tmpdata)
tmpdata <- arrange(fatalities_and_injuries_per_event, desc(FATALITIES + INJURIES))[1:10]
tmpdata <- arrange(fatalities_and_injuries_per_event, desc(FATALITIES + INJURIES))[1:10,]
tmpdata <- melt(fatalities_and_injuries_per_event,id.vars = "EVTYPE")
tmpdata
tmpdata <- arrange(fatalities_and_injuries_per_event, desc(FATALITIES + INJURIES))[1:10,]
tmpdata <- melt(tmpdata,id.vars = "EVTYPE")
tmpdata
g<- ggplot(tmpdata, aes(x = reorder(EVTYPE,-value), y = value, fill = variable))
g + geom_bar(stat="identity")
fatalities_and_injuries_per_event <- aggregate(cbind(FATALITIES,INJURIES)~EVTYPE,dat,sum,na.rm=TRUE)
tmpdata <- arrange(fatalities_and_injuries_per_event, desc(FATALITIES + INJURIES))[1:10,]
tmpdata <- melt(tmpdata,id.vars = "EVTYPE")
g<- ggplot(tmpdata, aes(x = reorder(EVTYPE,-value), y = value, fill = variable))
g + geom_bar(stat="identity")
g + geom_bar(stat="identity") + labs(title = "Fatalities + Injuries for the top 10 most harmful events",
xlab = "Event", ylab="Number of people")
g + geom_bar(stat="identity") + labs(title = "Fatalities + Injuries for the top 10 most harmful events",
x = "Event", y="Number of people")
g + geom_bar(stat="identity") + labs(title = "Fatalities + Injuries for the top 10 most harmful events",
x = "Event", y="Number of people")+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
?format
table_data <- mutate(fatalities_and_injuries_per_event, TOTAL = FATALITIES + INJURIES)
head(table_data)
table_data <- arrange(table_data, desc(FATALITIES + INJURIES))[1:10]
table_data <- mutate(fatalities_and_injuries_per_event, TOTAL = FATALITIES + INJURIES)
table_data <- arrange(table_data, desc(FATALITIES + INJURIES))[1:10,]
table_data
table_data <- format(table_data, big.mark = ",", decimial.mark = ".")
table_data
head(df)
head(dat)
expenses_per_event <- aggregate(PROPEXPTOTAL ~ EVTYPE, dat, sum)
head(expenses_per_event)
expenses_per_event <- aggregate(cbind(PROPEXPTOTAL, CROPEXPTOTAL) ~ EVTYPE, dat, sum)
head(expenses_per_event)
expenses_per_event <- mutate(expenses_per_event, TOTALEXP = PROPEXPTOTAL + CROPEXPTOTAL)
head(expenses_per_event)
expenses_per_event <- arrange(expenses_per_event, desc(PROPEXPTOTAL, CROPEXPTOTAL))[1:15,]
expenses_per_event <- mutate(expenses_per_event, TOTALEXP = PROPEXPTOTAL + CROPEXPTOTAL)
head(expenses_per_event)
g <- ggplot(expenses_per_event, aes(x=EVTYPE))
g + geom_line(aes(y = PROPEXPTOTAL))
g + geom_point(aes(y = PROPEXPTOTAL))
g <- ggplot(expenses_per_event, aes(x=reorder(EVTYPE,-PROPEXPTOTAL)))
g + geom_point(aes(y = PROPEXPTOTAL))
tmpdata <- melt(expenses_per_event, id.vars = "EVTYPE")
head(tmpdata)
g <- ggplot(expenses_per_event, aes(x=reorder(EVTYPE,-PROPEXPTOTAL),y=value,group = "variable"))
g + geom_point()
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-PROPEXPTOTAL),y=value,group = "variable"))
g + geom_point()
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable"))
g + geom_point()
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable", color = variable))
g + geom_point()
g + geom_bar(stat = "identity")
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",fill = variable, color = variable))
g + geom_bar(stat = "identity")
expenses_per_event <- aggregate(cbind(PROPEXPTOTAL, CROPEXPTOTAL) ~ EVTYPE, dat, sum)
expenses_per_event <- arrange(expenses_per_event, desc(PROPEXPTOTAL, CROPEXPTOTAL))[1:15,]
tmpdata <- melt(expenses_per_event, id.vars = "EVTYPE")
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",fill = variable, color = variable))
g + geom_bar(stat = "identity")
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_color_manual(labels = c("Property Damage", "Crop Damage"))
?scale_color_manual
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_color_manual(labels = c("Property Damage", "Crop Damage"), values = variable)
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_color_manual(labels = c("Property Damage", "Crop Damage"), values = c("red","blue"))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_color_manual(labels = c("Property Damage", "Crop Damage"), values = c("red","blue"))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",
fill = factor(variable, labels = c"Property Damage", "Crop Damage")))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",
color = factor(variable, labels = c"Property Damage", "Crop Damage")))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",
color = factor(variable, labels = c("Property Damage", "Crop Damage")))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_color_manual(labels = c("Property Damage", "Crop Damage"), values = c("red","blue"))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",
color = factor(variable, labels = c("Property Damage", "Crop Damage"))))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_color_manual(labels = c("Property Damage", "Crop Damage"), values = c("red","blue"))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",
fill = factor(variable, labels = c("Property Damage", "Crop Damage"))))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(color = "title")
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",
fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(color = "title")
scale_fill_manual(labels = c("Property Damage", "Crop Damage"), values = c("red","blue"))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",
fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(color = "title")
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(color = "title") +
scale_fill_manual(labels = c("Property Damage", "Crop Damage"), values = c("red","blue"))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(color = "title") +
scale_fill_manual(labels = c("Property Damage", "Crop Damage"))
?scale_fill_manual
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(color = "title") +
scale_fill_manual(labels = c("Property Damage", "Crop Damage"), values=variable)
?guide_legend
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",
fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,fill = variable,group = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = variable,fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
"
"
"
"
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
expenses_per_event <- aggregate(cbind(PROPEXPTOTAL, CROPEXPTOTAL) ~ EVTYPE, dat, sum)
head(expenses_per_event)
names(expenses_per_event) <- c("EVTYPE","PropertyDamage","CropDamage")
expenses_per_event <- arrange(expenses_per_event, desc(PROPEXPTOTAL, CROPEXPTOTAL))[1:15,]
names(expenses_per_event) <- c("EVTYPE","PropertyDamage","CropDamage")
expenses_per_event <- arrange(expenses_per_event, desc(PropertyDamage, CropDamage))[1:15,]
tmpdata <- melt(expenses_per_event, id.vars = "EVTYPE")
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
names(expenses_per_event) <- c("EVTYPE","Property.Damage","Crop.Damage")
expenses_per_event <- arrange(expenses_per_event, desc(Property.Damage, Crop.Damage))[1:15,]
tmpdata <- melt(expenses_per_event, id.vars = "EVTYPE")
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))+
scale_fill_discrete(name"",labels = c("prp","crp"))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",fill = variable))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,group = "variable",fill = variable))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))+
scale_fill_discrete(name = "",labels = c("prp","crp"))
g + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1))+
scale_fill_discrete(name = "",labels = c("Property Damage","Crop Damage"))
g + geom_bar(stat = "identity", position = "dodge") + theme(axis.text.x = element_text(angle = 30, hjust = 1))+
scale_fill_discrete(name = "",labels = c("Property Damage","Crop Damage"))
g <- ggplot(tmpdata, aes(x=reorder(EVTYPE,-value),y=value,fill = variable))
g + geom_bar(stat = "identity", position = "dodge") + theme(axis.text.x = element_text(angle = 30, hjust = 1))+
scale_fill_discrete(name = "",labels = c("Property Damage","Crop Damage"))
