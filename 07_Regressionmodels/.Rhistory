data(mtcars )
mpg <- mtcars$mpg
names(mtcars)
cyl <- mtcars$cyl
fit <- lm(mpg ~ cyl)
fit
summary(fit)
fit$coef[2]
fit$coef[2]*4
class(cyl)
cyl <- as.factor(cyl)
cyl
names(mtcars)
wt <- mtcars$wt
class(wt)
fit <- lm(mpg ~ cyl + wt)
fit
library(swirl)
swirl()
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(hunger$Numeric[hunger$Sex == "Female"]~ hunger$Year[hunger$Sex == "Female"] )
lmM <- lm(hunger$Numeric[hunger$Sex == "Male"]~ hunger$Year[hunger$Sex == "Male"] )
lmBoth <- lm(Numeric ~ Year  + Sex , hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, data = hunger)
summary(lmInter)
fit <- lm(y~x,out2)
plot(fit,which=1)
fitno <- lm(y~x, out2[-1,])
plot(fitno, which = 1)
data("swiss")
fit <- lm(Fertility ~ Agriculture, data = swiss)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
fit <- lm(Fertility ~ Agriculture + factor(CatholicBin), data = swiss)
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
library(dplyr);
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
fit <- lm(Fertility ~ Agriculture + factor(CatholicBin), data = swiss)
fit
summary(fit)
fit1 <- lm(Fertility~Agriculture*factor(CatholicBin), data = swiss)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
p <- 1
n <- 100; x2 <- runif(n); x1 <- p * runif(n) - (1 - p) * x2
beta0 <- 0; beta1 <- 1; tau <- 4 ; sigma <- .01
y <- beta0 + x1 * beta1 + tau * x2 + rnorm(n, sd = sigma)
plot(x1, y, type = "n", frame = FALSE)
abline(lm(y ~ x1), lwd = 2)
co.pal <- heat.colors(n)
points(x1, y, pch = 21, col = "black", bg = co.pal[round((n - 1) * x2 + 1)], cex = 2)
par(mfrow=c(2,2))
fit <- lm(Fertility~., data = swiss)
plot(fit)
library(swirl)
swirl()
swirl()
swirl()
library(swirl)
swirl()
fit <- lm(y~x, out2)
plot(fit, which = 1)
play()
View(out2)
range(X)
range(out2$x)
range(out2$x[-1,])
range(out2$x[-1])
with(plot(x,y))
with(out2,plot(x,y))
plot(out2$x,out2$y)
fit <- lm(y~x, out2)
abline(fit)
fitno <- lm(y~x,out2[-1,])
abline(fitno, col = "red")
fit$coefficients
fitno$coefficients
predict(fit)
resid(fit)
resid(fit)[1]
sum(resid(fit))
plot(fitno, which=1)
which.max(resid(fit))
which.max(resid(fitno))
resid(fitno)
max(redid(fitno))
max(resid(fitno))
resid(fitno[22])
resid(fitno)[22]
resid(fit)[22]
resid(fit)[1]
resid(fit)[13]
nxt(+)
nxt()
fitno <- lm(y~x, out2[-1,])
plot(fitno, which = 1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1,"y"] - predict(fitno,out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- deviance(fit)/sqrt(resid(fit))
sigma <- sqrt(deviance(fit))/df.residual(fit)
sigma <- sqrt(deviance(fit)/df.residual(fit))
library(swirl)
swirl()
rgp1()
rgp2()
head(swiss)
mdl <- fit(Fertility~., swiss)
mdl <- lm(Fertility~., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, data = swiss
)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, data = swiss)
anova(fit1,fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d,2,43,lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit1,fit3,fit5,fit6)
knitr::opts_chunk$set(echo = TRUE)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y~x)
hv <- hatvalues(fit)
head(hv)
dfb <- dfbeta(fit)
dfb
dfb[max.hv,2]
max.hv <- which.max(hv)
dfb <- dfbeta(fit)
dfb[max.hv,2]
dfb <- dfbetas(fit)
dfb[max.hv,2]
?dfbeta
?dfbetas
data("mtcars")
summary(mdl)$coef
data("mtcars")
mdl <- lm(mpg ~ factor(cyl) + wt, mtcars)
summary(mdl)$coef
fit1 <- lm(mpg ~ factor(cyl), mtcars)
fit2 <- lm(mpg ~ factor(cyl) + wt, mtcars)
summary(fit1)$coef
summary(fit2)$coef
data("mtcars")
head(mtcars)
?mtcars
knitr::opts_chunk$set(echo = TRUE)
summary(mtcars)
str(mtcars)
mdl <- lm(mpg, factor(am),mtcars)
data("mtcars")
mdl <- lm(mpg, factor(am),mtcars)
mdl <- lm(mpg~factor(am),mtcars)
mdl
summary(mdl)
library(ggplot2)
g <- ggplot(mtcars, aes(x = factor(am), y = mpg, fill = factor(am)))
g + geom_boxplot()
mdl1 <- lm(mpg~factor(am),mtcars)
mdl2 <- lm(mpg~factor(am) + wt,mtcars)
mdl3 <- lm(mpg~factor(am) + wt + cyl,mtcars)
anova(mdl1, mdl2, mdl3)
summary(mdl3)$coef
coef(mtcars$wt, mtcars$am)
mtcars$am
cor(mtcars$wt, mtcars$am)
cor(mtcars)
cormat <- round(cor(mtcars),2)
cormat
melted_cormat <- melt(cormat)
library(reshape2)
melted_cormat <- melt(cormat)
head(melted_cormat)
ggplot(data = melted_cormat, aes(x = Var1, y = Var2, fill = value)) + geom_tile()
??corplot
require(corrplot)
install.packages("corrplot")
install.packages("ggally")
install.packages("GGally")
corrplot(cormat)
library(corrplot)
corrplot(cormat)
corrplot(cormat, type = 'upper', method = 'color', addCoef.col = 'black')
corrplot()
cormat
abs(cormat)
abs(cormat)>0.5
cormat2 <- cormat
cormat2[abs(cormat2)<0.5] <- 0
cormat2
corrplot(cormat2, type = 'upper', method = 'color', addCoef.col = 'black')
corrplot.mixed(cormat2, lower.col = "black", number.cex = 0.7)
corrplot.mixed(cormat2, lower.col = "black",upper = 'color', number.cex = 0.7)
?cor.mtest
res1 <- cor.mtest(mtcars, conf.level = 0.95)
res1
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = 2)
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .2)
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05)
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05, insig = "blank")
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05, insig = "blank", order= "AOE")
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05, insig = "blank", order= "hclus")
mtcars$am <- as.factor(mtcars$am)
ggplot(mtcars, aes(x = am, y = mpg, fill = am)) + geom_boxplot()
ggplot(mtcars, aes(x = am, y = mpg, fill = am)) + geom_boxplot() + labs(title="title")
ggplot(mtcars, aes(x = am, y = mpg, fill = am)) +
geom_boxplot() +
labs(title="Difference between MPG for Different Transmissions", x="Transmission [0: automatic / 1: manual]")
cormat <- round(cor(mtcars),2)
data("mtcars")
cormat <- round(cor(mtcars),2)
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05, insig = "blank", order= "hclus")
par(mfrow = c(1,2))
ggplot(mtcars, aes(x = am, y = mpg, fill = am)) +
geom_boxplot() +
labs(title="Difference between MPG for Different Transmissions", x="Transmission [0: automatic / 1: manual]")
cormat <- round(cor(mtcars),2)
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05, insig = "blank", order= "hclus")
ggplot(mtcars, aes(x = am, y = mpg, fill = am)) +
geom_boxplot() +
labs(title="Difference between MPG for Different Transmissions", x="Transmission [0: automatic / 1: manual]")
ggplot(mtcars, aes(x = factor(am), y = mpg, fill = factor(am)) +
geom_boxplot() +
labs(title="Difference between MPG for Different Transmissions", x="Transmission [0: automatic / 1: manual]")
cormat <- round(cor(mtcars),2)
ggplot(mtcars, aes(x = factor(am), y = mpg, fill = factor(am))) +
geom_boxplot() +
labs(title="Difference between MPG for Different Transmissions", x="Transmission [0: automatic / 1: manual]")
mydata <- mtcars[,c(1,2,3,4,9)]
mydata
library(knitr)
opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
options(scipen=999, comment = NA)
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05, insig = "blank", order= "hclus",mar=c(0,0,1,0))
title(main="Correlation Heatmap")
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05, insig = "blank", order= "hclus",mar=c(0,0,1,0))
title(main="Correlation Heatmap")
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05, insig = "blank", order= "hclus",mar=c(0,0,0,0))
title(main="Correlation Heatmap")
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05, insig = "blank", order= "hclus",mar=c(0,0,3,0))
title(main="Correlation Heatmap")
corrplot(cormat, type = "upper", method = "color", p.mat = res1$p, sig.level = .05, insig = "blank", order= "hclus",mar=c(2,0,0,0))
title(x="Correlation Heatmap")
cormat <- round(cor(mydata),2)
t.test(mpg ~ am, data = mtcars)
t.test(mpg ~ am, data = mtcars, paired = FALSE, var.equal = FALSE)
t.test(mpg ~ am, data = mtcars, paired = FALSE, var.equal = FALSE)$p.value
mdl <- lm(mpg~am, mydata)
mdl_all <- lm(mpg~.,mydata)
mdl
mdl <- lm(mpg~am-1, mydata)
mdl
mdl <- lm(mpg~factor(am), mydata)
mdl
mdl <- lm(mpg~factor(am)-1, mydata)
mdl
mdl <- lm(mpg~factor(am), mydata)
summary(mdl)$coef
mdl_all <- lm(mpg~factor(am) + wt + cyl,mydata)
mydata <- mtcars[,c(1,2,3,4,6,9)]
mdl_all <- lm(mpg~factor(am) + wt + cyl,mydata)
anova(mdl,mdl_all)
mdl2 <- lm(mpg~factor(am) + wt + cyl,mydata)
summary(mdl2)$coef
summary(mdl)$coef[,1]
summary(mdl2)$coef[,1]
summary(mdl)$coef[,1]
round(summary(mdl)$coef[,1],2)
round(summary(mdl)$coef[,1][1],2)
anova(mdl,mdl2)
plot(mdl)
plot(mdl)
?step
mdl_best <- step(lm(mpg~., data=mtcars))
mdl_best
mdl_best <- step(lm(mpg~., data=mtcars),
trace=
0
,
steps=
10000
)
mdl_best <- step(lm(mpg~., data=mtcars), trace = 0, steps steps = 10000)
mdl_best <- step(lm(mpg~., data=mtcars), trace = 0, steps = 10000)
mdl_best <- step(lm(mpg~., data=mtcars), trace = 0)
summary(mdl_best)
par(mfrow = c(2,2))
plot(mdl)
par(mfrow = c(2,2))
plot(mdl)
plot(mdl_best)
mdl_best <- step(lm(mpg~.,data = mtcars), trace = 0)
summary(mdl_best)
names(summary(mdl))
rm(list=ls)
rm(list=ls())
library(swirl)
swirl()
setwd("~/Coursera/DataScience/DataScienceCoursera/07_Regressionmodels")
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda"
, destfile="./data/ravensData.rda",method="curl")
load("./data/ravensData.rda")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda"
, destfile="./data/ravensData.rda",method="curl")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda"
, destfile="./data/ravensData.rda")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda", destfile="./data/ravensData.rda")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda", destfile = "data.rda")
library(swirl)
swirl()
View(ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, binomial, data = ravenData)
lodds <- predict(mdl, data.frame(ravenScore = c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
mdl0 <- glm(ravenWinNum~1,binomial, ravenData)
summary(mdl0)
coef(mdl0)
exp(coef(mdl0))
7/3
library(MASS)
data("shuttle")
head(shuttle)
str(shuttle)
?shuttle
knitr::opts_chunk$set(echo = TRUE)
mdl <- glm(use~wind, binomial, data = shuttl)
mdl <- glm(use~wind, binomial, data = shuttle)
mdl
summary(mdl)
head_odds <- predict(mdl, data.frame(wind = c("head")))
head_odds
head_odds <- predict(mdl, data.frame(windtail = c("head")))
head_odds <- predict(mdl, data.frame(wind = c("head")))
tail_odds <- predict(mdl, data.frame(wind =c("tail")))
head_odds/tail_odds
tmp <-head_odds/tail_odds
exp(tmp)/(1+exp(tmp))
n <- exp(head_odds)/(1+exp(head_odds))
n
d <- exp(tail_odds)/(1+exp(tail_odds))
n/d
1-n/d
library(dplyr)
mydata <- mutate(shuttle,use = ifelse(use = "auto", 1,0))
head(ifelse(shuttle$use = "auto", 1,0))
tmp <- shuttle$use
head(ifelse(tmp = "auto", 1,0))
?ifelse
head(ifelse(tmp == "auto", 1,0))
mydata <- mutate(shuttle,use = ifelse(use == "auto", 1,0))
head(mydata)
mydata <- shuttle %>%
mutate(use = ifelse(use == "auto",1,0))
head(mydata)
mydata <- shuttle %>%
mutate(use = ifelse(use == "auto",1,0),
wind = ifelse(wind == "head",1,0))
head(mydata)
mdl <- glm(use~wind, binomial, data = mydata)
summary(mdl)
lodds <- predict(mdl, data.frame(wind = c(1)))
lodds
exp(lodds)/(1+exp(lodds))
lodds <- predict(mdl, data.frame(wind = c(0,1)))
lodds
exp(lodds[1])/(1+exp(lodds[1]))
a <- exp(lodds[1])/(1+exp(lodds[1]))
b <- exp(lodds[2])/(1+exp(lodds[2]))
a/b
b/a
lodds[2]/lodds[1]
mdl <- glm(use~wind + magn, binomial, data = mydata)
summary(mdl)
mdl <- glm(use~wind, binomial, data = mydata)
mdl$coefficients
exp(mdl$coefficients[2])
mdl <- glm(use~wind + magn, binomial, data = mydata)
mdl$coefficients
exp(mdl$coefficients[2])
mdl <- glm(use~wind, binomial, data = mydata)
exp(mdl$coefficients[2])
exp(mdl$coefficients[1])
exp(mdl$coefficients[2])/exp(mdl$coefficients[1])
exp(mdl$coefficients[1])/exp(mdl$coefficients[2])
swirl()
var(rpois(1000,50))
nxt()
head(hits)
class(hits[,"date"])
as.integer(head(hits[,"date"]))
mdl <- glm(visits ~ date,poisson, hits)
summary(mdl)
confint(mdl,"date")
exp(confint(mdl,"date"))
which.max(hits[,"visits"])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(0.95,lambda)
mdl <- glm(visits~date, poisson, data = hits, offset = log(visits +1))
mdl2 <- glm(simplystats~date, poisson, data = hits, offset = log(visits +1))
qpois(.95, mdl2$fitted.values[704])
data("InsectSprays")
names(InsectSprays)
mdl <- glm(count ~ factor(spray), poisson, data = InsectSprays)
summary(mdl)
exp(summary(mdl)$coef[2])
exp(summary(mdl)$coef[1])
apply(InsectSprays,mean)
sapply(InsectSprays,mean)
sapply(InsectSprays,1,mean)
sapply(InsectSprays$count,mean)
sapply(InsectSprays$spray,mean)
sapply(InsectSprays,class)
aggregate(count ~ spray,InsectSprays mean)
aggregate(count ~ spray,InsectSprays, mean)
exp(summary(mdl)$coef[1])
exp(summary(mdl)$coef[2])
exp(summary(mdl)$coef[1])+exp(summary(mdl)$coef[2])
summary(mdl)
exp(summary(mdl)$coef[2])
exp(summary(mdl)$coef[1])
mdl <- glm(count ~ factor(spray)-1, poisson, data = InsectSprays)
summary(mdl)
mdl0 <- glm(count ~ factor(spray), poisson, data = InsectSprays)
summary(mdl0)
exp(summary(mdl)$coef[1]+summary(mdl)$coef[2])
exp(summary(mdl0)$coef[1]+summary(mdl0)$coef[2])
mdl <- glm(count ~ factor(spray), poisson, data = InsectSprays)
summary(mdl)
exp(summary(mdl)$coef)
exp(coef(mdl))
mdl <- glm(count ~ factor(spray)-1, poisson, data = InsectSprays)
exp(coef(mdl))
tmp <- exp(coef(mdl))
tmp[1]/tmp[2]
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,<)
plot(x,y)
mdl <- glm(count ~ factor(spray), family = poisson, data = InsectSprays, offset = log(count))
mdl <- glm(count ~ factor(spray), family = poisson, data = InsectSprays, offset = log(count+1))
mdl
summary(mdl)
mdl2 <- glm(count~factor(spray),family = poisson, data = InsectSprays, offset = log(10) + log(count+1))
summary(mdl2)
knot <- 0
splineTerms <- sapply(knots, function(knot) (x>knot)*(x-knot))
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knot <- 0
splineTerms <- sapply(knots, function(knot) (x>knot)*(x-knot))
splineTerms <- sapply(knot, function(knot) (x>knot)*(x-knot))
splineTerms
xMat <- cbind(1,x,splineTerms)
xMat
mdl <- lm(y~xMat -1)
summary(mdl)
mdl <- lm(y~xMat)
mdl
mdl <- lm(y~xMat-1)
summary(mdl)
mdl
yhat <- predict(mdl)
yhat
yhat[9]-yhat[8]
